warning: test tests/userprog/exec-bound doesn't count for grading
warning: test tests/userprog/sc-boundary-3 doesn't count for grading
warning: test tests/userprog/exec-bound-3 doesn't count for grading
warning: test tests/userprog/exec-bound-2 doesn't count for grading
TOTAL TESTING SCORE: 43.6%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/userprog/Rubric.functionality            88/108  28.5%/ 35.0%
tests/userprog/Rubric.robustness               53/ 88  15.1%/ 25.0%
tests/userprog/no-vm/Rubric                     0/  1   0.0%/ 10.0%
tests/filesys/base/Rubric                       0/ 30   0.0%/ 30.0%
--------------------------------------------- --- --- ------ ------
Total                                                  43.6%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     3/ 3 tests/userprog/args-none
	     3/ 3 tests/userprog/args-single
	     3/ 3 tests/userprog/args-multiple
	     3/ 3 tests/userprog/args-many
	     3/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	     3/ 3 tests/userprog/create-empty
	     3/ 3 tests/userprog/create-long
	     3/ 3 tests/userprog/create-normal
	     3/ 3 tests/userprog/create-exists

	- Test "open" system call.
	     3/ 3 tests/userprog/open-missing
	     3/ 3 tests/userprog/open-normal
	     3/ 3 tests/userprog/open-twice

	- Test "read" system call.
	  ** 0/ 3 tests/userprog/read-normal
	  ** 0/ 3 tests/userprog/read-zero

	- Test "write" system call.
	     3/ 3 tests/userprog/write-normal
	     3/ 3 tests/userprog/write-zero

	- Test "close" system call.
	     3/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	     5/ 5 tests/userprog/exec-once
	     5/ 5 tests/userprog/exec-multiple
	     5/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	     5/ 5 tests/userprog/wait-simple
	  ** 0/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	     5/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	    15/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	  ** 0/ 3 tests/userprog/rox-simple
	  ** 0/ 3 tests/userprog/rox-child
	  ** 0/ 3 tests/userprog/rox-multichild

	- Section summary.
	     22/ 28 tests passed
	     88/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     2/ 2 tests/userprog/close-stdin
	     2/ 2 tests/userprog/close-stdout
	     2/ 2 tests/userprog/close-bad-fd
	     2/ 2 tests/userprog/close-twice
	     2/ 2 tests/userprog/read-bad-fd
	     2/ 2 tests/userprog/read-stdout
	     2/ 2 tests/userprog/write-bad-fd
	     2/ 2 tests/userprog/write-stdin
	  ** 0/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	     3/ 3 tests/userprog/create-bad-ptr
	     3/ 3 tests/userprog/exec-bad-ptr
	  ** 0/ 3 tests/userprog/open-bad-ptr
	  ** 0/ 3 tests/userprog/read-bad-ptr
	     3/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     3/ 3 tests/userprog/create-bound
	     3/ 3 tests/userprog/open-boundary
	  ** 0/ 3 tests/userprog/read-boundary
	     3/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	     2/ 2 tests/userprog/create-null
	  ** 0/ 2 tests/userprog/open-null
	     2/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	  ** 0/ 3 tests/userprog/sc-bad-arg
	  ** 0/ 3 tests/userprog/sc-bad-sp
	     5/ 5 tests/userprog/sc-boundary
	     5/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	     5/ 5 tests/userprog/exec-missing
	  ** 0/ 5 tests/userprog/wait-bad-pid
	  ** 0/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	  ** 0/ 1 tests/userprog/bad-read
	  ** 0/ 1 tests/userprog/bad-write
	  ** 0/ 1 tests/userprog/bad-jump
	  ** 0/ 1 tests/userprog/bad-read2
	  ** 0/ 1 tests/userprog/bad-write2
	  ** 0/ 1 tests/userprog/bad-jump2

	- Section summary.
	     19/ 34 tests passed
	     53/ 88 points subtotal

Functionality of features that VM might break (tests/userprog/no-vm/Rubric):

	  ** 0/ 1 tests/userprog/no-vm/multi-oom

	- Section summary.
	      0/  1 tests passed
	      0/  1 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	  ** 0/ 1 tests/filesys/base/sm-create
	  ** 0/ 2 tests/filesys/base/sm-full
	  ** 0/ 2 tests/filesys/base/sm-random
	  ** 0/ 2 tests/filesys/base/sm-seq-block
	  ** 0/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	  ** 0/ 1 tests/filesys/base/lg-create
	  ** 0/ 2 tests/filesys/base/lg-full
	  ** 0/ 2 tests/filesys/base/lg-random
	  ** 0/ 2 tests/filesys/base/lg-seq-block
	  ** 0/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 4 tests/filesys/base/syn-read
	  ** 0/ 4 tests/filesys/base/syn-write
	  ** 0/ 2 tests/filesys/base/syn-remove

	- Section summary.
	      0/ 13 tests passed
	      0/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a480
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)
In tests/userprog/read-normal:
0x0804a480: filesize (...../lib/user/syscall.c:111)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-normal:

Copying tests/userprog/read-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/n2uSBtuQWk.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-normal
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  373,555,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-normal':
(read-normal) begin
(read-normal) open "sample.txt" for verification
Page fault at 0x2: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000002 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000002 edi=000000ef esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=c520
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a480.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 105 ticks
Thread: 35 idle ticks, 60 kernel ticks, 10 user ticks
hda2 (filesys): 91 reads, 216 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1518 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-zero FAILURE:

run: read() returned -1073741937 instead of 0: FAILED

OUTPUT FROM tests/userprog/read-zero:

Copying tests/userprog/read-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/sB9loQsGZ9.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-zero
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  386,662,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-zero':
(read-zero) begin
(read-zero) open "sample.txt"
(read-zero) read() returned -1073741937 instead of 0: FAILED
read-zero: exit(1)
Execution of 'read-zero' complete.
Timer: 96 ticks
Thread: 35 idle ticks, 58 kernel ticks, 3 user ticks
hda2 (filesys): 91 reads, 216 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1006 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-twice FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.26, 0.30, 0.28

OUTPUT FROM tests/userprog/wait-twice:

Copying tests/userprog/wait-twice to scratch partition...
Copying tests/userprog/child-simple to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/XNjDi8K8P3.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-twice
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  384,204,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 202 sectors (101 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-twice' into the file system...
Putting 'child-simple' into the file system...
Erasing ustar archive...
Executing 'wait-twice':
(wait-twice) begin
(child-simple) run
child-simple: exit(81)
(wait-twice) wait(exec()) = 81

TIMEOUT after 61 seconds of wall-clock time - load average: 0.26, 0.30, 0.28

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-simple FAILURE:

run: read "rox-simple": FAILED

OUTPUT FROM tests/userprog/rox-simple:

Copying tests/userprog/rox-simple to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/wf5xzSAgMU.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  384,204,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 104 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
(rox-simple) begin
(rox-simple) open "rox-simple"
(rox-simple) read "rox-simple"
(rox-simple) read "rox-simple": FAILED
rox-simple: exit(1)
Execution of 'rox-simple' complete.
Timer: 91 ticks
Thread: 35 idle ticks, 54 kernel ticks, 2 user ticks
hda2 (filesys): 66 reads, 212 writes
hda3 (scratch): 103 reads, 2 writes
Console: 977 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

run: read "child-rox": FAILED

OUTPUT FROM tests/userprog/rox-child:

Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/T6lux3t1DT.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-child
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  389,120,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 220 sectors (110 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
(rox-child) read "child-rox": FAILED
rox-child: exit(1)
Execution of 'rox-child' complete.
Timer: 96 ticks
Thread: 38 idle ticks, 55 kernel ticks, 3 user ticks
hda2 (filesys): 92 reads, 446 writes
hda3 (scratch): 219 reads, 2 writes
Console: 1010 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

run: read "child-rox": FAILED

OUTPUT FROM tests/userprog/rox-multichild:

Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/vzX2DxUG8H.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  373,145,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 220 sectors (110 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) read "child-rox": FAILED
rox-multichild: exit(1)
Execution of 'rox-multichild' complete.
Timer: 96 ticks
Thread: 39 idle ticks, 56 kernel ticks, 2 user ticks
hda2 (filesys): 92 reads, 446 writes
hda3 (scratch): 219 reads, 2 writes
Console: 1055 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-child-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a4f0
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)
In tests/userprog/multi-child-fd:
0x0804a4f0: filesize (...../lib/user/syscall.c:111)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/multi-child-fd:

Copying tests/userprog/multi-child-fd to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
Copying tests/userprog/child-close to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/pdSEnJO1dW.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-child-fd
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  385,433,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 219 sectors (109 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Erasing ustar archive...
Executing 'multi-child-fd':
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
(child-close) begin
(child-close) end
child-close: exit(0)
(multi-child-fd) wait(exec()) = 0
Page fault at 0x2: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000002 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000002 edi=000000ef esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=c5c0
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a4f0.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 103 ticks
Thread: 38 idle ticks, 57 kernel ticks, 8 user ticks
hda2 (filesys): 167 reads, 446 writes
hda3 (scratch): 218 reads, 2 writes
Console: 1656 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc0027942 0x6e65706f
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc0027942: strcmp (...ild/../../lib/string.c:81)
0x6e65706f: (unknown)

OUTPUT FROM tests/userprog/open-bad-ptr:

Copying tests/userprog/open-bad-ptr to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/i3NI5jxH88.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  356,352,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'open-bad-ptr':
(open-bad-ptr) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027942
 cr2=20101234 error=00000000
 eax=20101234 ebx=00000001 ecx=20101234 edx=c010de8c
 esi=00000000 edi=c010705c esp=c0036ee8 ebp=c010de88
 cs=0008 ds=0010 es=0010 ss=620c
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc0027942 0x6e65706f.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 96 ticks
Thread: 32 idle ticks, 57 kernel ticks, 7 user ticks
hda2 (filesys): 64 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
Console: 1434 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-ptr FAILURE:

run: should not have survived read(): FAILED

OUTPUT FROM tests/userprog/read-bad-ptr:

Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/0YGMXmIzBP.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  340,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 105 sectors (52 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
(read-bad-ptr) should not have survived read(): FAILED
read-bad-ptr: exit(1)
Execution of 'read-bad-ptr' complete.
Timer: 94 ticks
Thread: 35 idle ticks, 58 kernel ticks, 2 user ticks
hda2 (filesys): 92 reads, 216 writes
hda3 (scratch): 104 reads, 2 writes
Console: 1021 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-boundary FAILURE:

run: read() returned 134537096 instead of 239: FAILED

OUTPUT FROM tests/userprog/read-boundary:

Copying tests/userprog/read-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/BixDxA2KXr.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run read-boundary
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  352,665,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-boundary':
(read-boundary) begin
(read-boundary) open "sample.txt"
(read-boundary) read() returned 134537096 instead of 239: FAILED
read-boundary: exit(1)
Execution of 'read-boundary' complete.
Timer: 96 ticks
Thread: 33 idle ticks, 60 kernel ticks, 3 user ticks
hda2 (filesys): 93 reads, 226 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1038 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-null FAILURE:

Kernel panic in run: PANIC at ../../filesys/directory.c:125 in dir_lookup(): assertion `name != NULL' failed.
Call stack: 0xc002891f 0x804a464
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
In tests/userprog/open-null:
0x0804a464: open (...../lib/user/syscall.c:105)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-null:

Copying tests/userprog/open-null to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/lwcu8u1qU_.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run open-null
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  358,809,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-null' into the file system...
Erasing ustar archive...
Executing 'open-null':
(open-null) begin
Kernel PANIC at ../../filesys/directory.c:125 in dir_lookup(): assertion `name != NULL' failed.
Call stack: 0xc002891f 0x804a464.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 97 ticks
Thread: 34 idle ticks, 62 kernel ticks, 1 user ticks
hda2 (filesys): 62 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 1100 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-bad-arg FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-arg) begin
  sc-bad-arg: exit(-1)
Differences in `diff -u' format:
  (sc-bad-arg) begin
- sc-bad-arg: exit(-1)
+ sc-bad-arg: exit(-268370093)

OUTPUT FROM tests/userprog/sc-bad-arg:

Copying tests/userprog/sc-bad-arg to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/10MVqVAtRQ.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-bad-arg
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  384,204,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-arg' into the file system...
Erasing ustar archive...
Executing 'sc-bad-arg':
(sc-bad-arg) begin
sc-bad-arg: exit(-268370093)
Execution of 'sc-bad-arg' complete.
Timer: 91 ticks
Thread: 34 idle ticks, 57 kernel ticks, 1 user ticks
hda2 (filesys): 61 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
Console: 885 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-bad-sp FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c13e 0x80480aa
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c13e: syscall_handler (.../../userprog/syscall.c:43)
In tests/userprog/sc-bad-sp:
0x080480aa: test_main (...s/userprog/sc-bad-sp.c:19)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/sc-bad-sp:

Copying tests/userprog/sc-bad-sp to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/XzMHs9Keuw.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sc-bad-sp
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  379,289,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-sp' into the file system...
Erasing ustar archive...
Executing 'sc-bad-sp':
(sc-bad-sp) begin
Page fault at 0x40480a3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c13e
 cr2=040480a3 error=00000000
 eax=040480a3 ebx=c010dfb0 ecx=000000ad edx=00000030
 esi=c010dfb0 edi=00000000 esp=00000001 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=c420
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c13e 0x80480aa.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 95 ticks
Thread: 33 idle ticks, 55 kernel ticks, 7 user ticks
hda2 (filesys): 61 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 1420 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-bad-pid FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.16, 0.27, 0.27

OUTPUT FROM tests/userprog/wait-bad-pid:

Copying tests/userprog/wait-bad-pid to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/Qsd2ex0XAe.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-bad-pid
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  381,747,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-bad-pid' into the file system...
Erasing ustar archive...
Executing 'wait-bad-pid':
(wait-bad-pid) begin

TIMEOUT after 61 seconds of wall-clock time - load average: 0.16, 0.27, 0.27

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-killed FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c13e 0x80480aa
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c13e: syscall_handler (.../../userprog/syscall.c:43)
In tests/userprog/wait-killed:
0x080480aa: test_main (...userprog/wait-killed.c:10)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/wait-killed:

Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/V0F4Z8QCRw.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  386,662,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 203 sectors (101 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
(wait-killed) begin
(child-bad) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c13e
 cr2=20101234 error=00000000
 eax=20101234 ebx=c0114fb0 ecx=000000ad edx=00000030
 esi=c0114fb0 edi=00000000 esp=00000001 ebp=c0114fe8
 cs=0008 ds=0010 es=0010 ss=c420
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c13e 0x80480aa.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 103 ticks
Thread: 38 idle ticks, 57 kernel ticks, 8 user ticks
hda2 (filesys): 126 reads, 412 writes
hda3 (scratch): 202 reads, 2 writes
Console: 1494 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-read) begin
  bad-read: exit(-1)
Differences in `diff -u' format:
  (bad-read) begin
- bad-read: exit(-1)
+ bad-read: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-read:

Copying tests/userprog/bad-read to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/DUtLOCtgMu.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-read
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  380,108,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read' into the file system...
Erasing ustar archive...
Executing 'bad-read':
(bad-read) begin
Page fault at 0: not present error reading page in user context.
bad-read: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a3
 cr2=00000000 error=00000004
 eax=00000100 ebx=00000000 ecx=000000ad edx=00000027
 esi=00000000 edi=00000000 esp=bfffff80 ebp=bfffffbc
 cs=001b ds=0023 es=0023 ss=0023
bad-read: exit(0)
Execution of 'bad-read' complete.
Timer: 98 ticks
Thread: 32 idle ticks, 59 kernel ticks, 7 user ticks
hda2 (filesys): 63 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
Console: 1222 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-write) begin
  bad-write: exit(-1)
Differences in `diff -u' format:
  (bad-write) begin
- bad-write: exit(-1)
+ bad-write: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-write:

Copying tests/userprog/bad-write to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/h_PGY66rZp.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  386,662,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
(bad-write) begin
Page fault at 0: not present error writing page in user context.
bad-write: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a3
 cr2=00000000 error=00000006
 eax=00000100 ebx=00000000 ecx=000000ad edx=00000027
 esi=00000000 edi=00000000 esp=bfffff80 ebp=bfffffbc
 cs=001b ds=0023 es=0023 ss=0023
bad-write: exit(0)
Execution of 'bad-write' complete.
Timer: 97 ticks
Thread: 33 idle ticks, 57 kernel ticks, 7 user ticks
hda2 (filesys): 61 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 1229 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-jump) begin
  bad-jump: exit(-1)
Differences in `diff -u' format:
  (bad-jump) begin
- bad-jump: exit(-1)
+ bad-jump: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-jump:

Copying tests/userprog/bad-jump to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/ggbHqS7zS3.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-jump
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  386,662,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump' into the file system...
Erasing ustar archive...
Executing 'bad-jump':
(bad-jump) begin
Page fault at 0: not present error reading page in user context.
bad-jump: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0
 cr2=00000000 error=00000004
 eax=00000000 ebx=00000000 ecx=000000ad edx=00000027
 esi=00000000 edi=00000000 esp=bfffff6c ebp=bfffffbc
 cs=001b ds=0023 es=0023 ss=0023
bad-jump: exit(0)
Execution of 'bad-jump' complete.
Timer: 97 ticks
Thread: 33 idle ticks, 58 kernel ticks, 7 user ticks
hda2 (filesys): 63 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
Console: 1214 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-read2) begin
  bad-read2: exit(-1)
Differences in `diff -u' format:
  (bad-read2) begin
- bad-read2: exit(-1)
+ bad-read2: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-read2:

Copying tests/userprog/bad-read2 to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/1pmNkC2tJv.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-read2
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  366,182,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read2' into the file system...
Erasing ustar archive...
Executing 'bad-read2':
(bad-read2) begin
Page fault at 0xc0000000: rights violation error reading page in user context.
bad-read2: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a3
 cr2=c0000000 error=00000005
 eax=00000100 ebx=00000000 ecx=000000ad edx=00000027
 esi=00000000 edi=00000000 esp=bfffff80 ebp=bfffffbc
 cs=001b ds=0023 es=0023 ss=0023
bad-read2: exit(0)
Execution of 'bad-read2' complete.
Timer: 94 ticks
Thread: 32 idle ticks, 56 kernel ticks, 7 user ticks
hda2 (filesys): 63 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
Console: 1243 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-write2) begin
  bad-write2: exit(-1)
Differences in `diff -u' format:
  (bad-write2) begin
- bad-write2: exit(-1)
+ bad-write2: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-write2:

Copying tests/userprog/bad-write2 to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/CIcGCWvYV_.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-write2
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  383,385,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 102 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write2' into the file system...
Erasing ustar archive...
Executing 'bad-write2':
(bad-write2) begin
Page fault at 0xc0000000: rights violation error writing page in user context.
bad-write2: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a3
 cr2=c0000000 error=00000007
 eax=00000100 ebx=00000000 ecx=000000ad edx=00000027
 esi=00000000 edi=00000000 esp=bfffff80 ebp=bfffffbc
 cs=001b ds=0023 es=0023 ss=0023
bad-write2: exit(0)
Execution of 'bad-write2' complete.
Timer: 99 ticks
Thread: 33 idle ticks, 59 kernel ticks, 8 user ticks
hda2 (filesys): 61 reads, 208 writes
hda3 (scratch): 101 reads, 2 writes
Console: 1250 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump2 FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (bad-jump2) begin
  bad-jump2: exit(-1)
Differences in `diff -u' format:
  (bad-jump2) begin
- bad-jump2: exit(-1)
+ bad-jump2: exit(0)

(User fault messages are excluded for matching purposes.)

OUTPUT FROM tests/userprog/bad-jump2:

Copying tests/userprog/bad-jump2 to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/yr2D1UG03I.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run bad-jump2
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  385,843,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 103 sectors (51 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump2' into the file system...
Erasing ustar archive...
Executing 'bad-jump2':
(bad-jump2) begin
Page fault at 0xc0000000: rights violation error reading page in user context.
bad-jump2: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0000000
 cr2=c0000000 error=00000005
 eax=c0000000 ebx=00000000 ecx=000000ad edx=00000027
 esi=00000000 edi=00000000 esp=bfffff7c ebp=bfffffbc
 cs=001b ds=0023 es=0023 ss=0023
bad-jump2: exit(0)
Execution of 'bad-jump2' complete.
Timer: 96 ticks
Thread: 34 idle ticks, 55 kernel ticks, 7 user ticks
hda2 (filesys): 63 reads, 210 writes
hda3 (scratch): 102 reads, 2 writes
Console: 1244 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/no-vm/multi-oom FAILURE:

run: crashed child should return -1.: FAILED

OUTPUT FROM tests/userprog/no-vm/multi-oom:

Copying tests/userprog/no-vm/multi-oom to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/EGM5YNd9TU.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  385,433,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 121 sectors (60 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-oom' into the file system...
Erasing ustar archive...
Executing 'multi-oom':
(multi-oom) begin
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
Page fault at 0xc0000000: rights violation error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048108
 cr2=c0000000 error=00000005
 eax=2172beca ebx=00000015 ecx=00000005 edx=00000002
 esi=bfffffe0 edi=00000000 esp=bffffee0 ebp=bfffffb0
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(0)
(multi-oom) crashed child should return -1.: FAILED
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
multi-oom: exit(-1)
Page fault at 0xc0000000: rights violation error reading page in user context.
multi-oom: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x8048108
 cr2=c0000000 error=00000005
 eax=2172beca ebx=00000015 ecx=00000005 edx=00000002
 esi=bfffffe0 edi=00000000 esp=bffffee0 ebp=bfffffb0
 cs=001b ds=0023 es=0023 ss=0023
multi-oom: exit(0)
(multi-oom) crashed child should return -1.: FAILED
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(1)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
multi-oom: exit(14)
(multi-oom) after run 2/10, expected depth 1, actual depth 14.: FAILED
multi-oom: exit(1)
Execution of 'multi-oom' complete.
Timer: 371 ticks
Thread: 200 idle ticks, 77 kernel ticks, 95 user ticks
hda2 (filesys): 18430 reads, 246 writes
hda3 (scratch): 120 reads, 2 writes
Console: 3035 characters output
Keyboard: 0 keys pressed
Exception: 2 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-create FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a620
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)
In tests/filesys/base/sm-create:
0x0804a620: filesize (...../lib/user/syscall.c:111)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/sm-create:

Copying tests/filesys/base/sm-create to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/lwBsIidgmh.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-create
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  373,145,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-create' into the file system...
Erasing ustar archive...
Executing 'sm-create':
(sm-create) begin
(sm-create) create "blargle"
(sm-create) open "blargle" for verification
Page fault at 0x2: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000002 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000002 edi=0000162e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=dc40
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a620.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 96 ticks
Thread: 34 idle ticks, 53 kernel ticks, 9 user ticks
hda2 (filesys): 87 reads, 234 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1487 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-full FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256
Translation of call stack:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)

OUTPUT FROM tests/filesys/base/sm-full:

Copying tests/filesys/base/sm-full to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/GUOUDysFYn.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-full
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  356,761,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-full' into the file system...
Erasing ustar archive...
Executing 'sm-full':
(sm-full) begin
(sm-full) create "quux"
(sm-full) open "quux"
(sm-full) writing "quux"
(sm-full) close "quux"
(sm-full) open "quux" for verification
Page fault at 0x3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000003 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000003 edi=0000162e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=dc20
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 96 ticks
Thread: 34 idle ticks, 54 kernel ticks, 8 user ticks
hda2 (filesys): 91 reads, 246 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1529 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-random FAILURE:

run: read 13 bytes at offset 143 failed: FAILED

OUTPUT FROM tests/filesys/base/sm-random:

Copying tests/filesys/base/sm-random to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/Ahg99nxxtK.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  383,385,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-random' into the file system...
Erasing ustar archive...
Executing 'sm-random':
(sm-random) begin
(sm-random) create "bazzle"
(sm-random) open "bazzle"
(sm-random) write "bazzle" in random order
(sm-random) read "bazzle" in random order
(sm-random) read 13 bytes at offset 143 failed: FAILED
sm-random: exit(1)
Execution of 'sm-random' complete.
Timer: 98 ticks
Thread: 35 idle ticks, 57 kernel ticks, 6 user ticks
hda2 (filesys): 215 reads, 360 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1065 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-block FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256
Translation of call stack:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)

OUTPUT FROM tests/filesys/base/sm-seq-block:

Copying tests/filesys/base/sm-seq-block to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/Np88eqPDRv.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-seq-block
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  376,422,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-block' into the file system...
Erasing ustar archive...
Executing 'sm-seq-block':
(sm-seq-block) begin
(sm-seq-block) create "noodle"
(sm-seq-block) open "noodle"
(sm-seq-block) writing "noodle"
(sm-seq-block) close "noodle"
(sm-seq-block) open "noodle" for verification
Page fault at 0x3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000003 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000003 edi=0000162e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=dc20
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 99 ticks
Thread: 32 idle ticks, 57 kernel ticks, 10 user ticks
hda2 (filesys): 112 reads, 257 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1586 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256
Translation of call stack:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)

OUTPUT FROM tests/filesys/base/sm-seq-random:

Copying tests/filesys/base/sm-seq-random to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/nKRgnIbarY.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run sm-seq-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  387,891,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-random' into the file system...
Erasing ustar archive...
Executing 'sm-seq-random':
(sm-seq-random) begin
(sm-seq-random) create "nibble"
(sm-seq-random) open "nibble"
(sm-seq-random) writing "nibble"
(sm-seq-random) close "nibble"
(sm-seq-random) open "nibble" for verification
Page fault at 0x3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000003 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000003 edi=0000162e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=dc40
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 98 ticks
Thread: 34 idle ticks, 53 kernel ticks, 11 user ticks
hda2 (filesys): 106 reads, 254 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1595 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-create FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a620
Translation of call stack:
In kernel.o:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)
In tests/filesys/base/lg-create:
0x0804a620: filesize (...../lib/user/syscall.c:111)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/lg-create:

Copying tests/filesys/base/lg-create to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/z91pLYj17u.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-create
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  380,108,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-create' into the file system...
Erasing ustar archive...
Executing 'lg-create':
(lg-create) begin
(lg-create) create "blargle"
(lg-create) open "blargle" for verification
Page fault at 0x2: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000002 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000002 edi=0001279e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=eda0
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256 0x804a620.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 99 ticks
Thread: 36 idle ticks, 55 kernel ticks, 8 user ticks
hda2 (filesys): 87 reads, 370 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1487 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-full FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256
Translation of call stack:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)

OUTPUT FROM tests/filesys/base/lg-full:

Copying tests/filesys/base/lg-full to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/ZHdmTE3SXf.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-full
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  387,072,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-full' into the file system...
Erasing ustar archive...
Executing 'lg-full':
(lg-full) begin
(lg-full) create "quux"
(lg-full) open "quux"
(lg-full) writing "quux"
(lg-full) close "quux"
(lg-full) open "quux" for verification
Page fault at 0x3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000003 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000003 edi=0001279e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=ed80
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 102 ticks
Thread: 38 idle ticks, 56 kernel ticks, 8 user ticks
hda2 (filesys): 91 reads, 518 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1530 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-random FAILURE:

run: read 512 bytes at offset 64000 failed: FAILED

OUTPUT FROM tests/filesys/base/lg-random:

Copying tests/filesys/base/lg-random to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/xrwAdVJxuL.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  380,108,800 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-random' into the file system...
Erasing ustar archive...
Executing 'lg-random':
(lg-random) begin
(lg-random) create "bazzle"
(lg-random) open "bazzle"
(lg-random) write "bazzle" in random order
(lg-random) read "bazzle" in random order
(lg-random) read 512 bytes at offset 64000 failed: FAILED
lg-random: exit(1)
Execution of 'lg-random' complete.
Timer: 98 ticks
Thread: 35 idle ticks, 59 kernel ticks, 5 user ticks
hda2 (filesys): 89 reads, 530 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1067 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-block FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256
Translation of call stack:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)

OUTPUT FROM tests/filesys/base/lg-seq-block:

Copying tests/filesys/base/lg-seq-block to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/ybT10rCAd3.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-seq-block
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  387,072,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-block' into the file system...
Erasing ustar archive...
Executing 'lg-seq-block':
(lg-seq-block) begin
(lg-seq-block) create "noodle"
(lg-seq-block) open "noodle"
(lg-seq-block) writing "noodle"
(lg-seq-block) close "noodle"
(lg-seq-block) open "noodle" for verification
Page fault at 0x3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000003 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000003 edi=0001279e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=ed80
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 106 ticks
Thread: 42 idle ticks, 55 kernel ticks, 9 user ticks
hda2 (filesys): 384 reads, 665 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1586 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256
Translation of call stack:
0xc002891f: debug_panic (.../../lib/kernel/debug.c:38)
0xc002c256: syscall_handler (.../../userprog/syscall.c:99)

OUTPUT FROM tests/filesys/base/lg-seq-random:

Copying tests/filesys/base/lg-seq-random to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/MxlTVmkv9Z.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run lg-seq-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  371,507,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-random' into the file system...
Erasing ustar archive...
Executing 'lg-seq-random':
(lg-seq-random) begin
(lg-seq-random) create "nibble"
(lg-seq-random) open "nibble"
(lg-seq-random) writing "nibble"
(lg-seq-random) close "nibble"
(lg-seq-random) open "nibble" for verification
Page fault at 0x3: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c256
 cr2=00000003 error=00000000
 eax=c010d000 ebx=c010dfb0 ecx=00000000 edx=000002ff
 esi=00000003 edi=0001279e esp=c0037698 ebp=c010dfe8
 cs=0008 ds=0010 es=0010 ss=eda0
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc002891f 0xc002c256.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 107 ticks
Thread: 42 idle ticks, 56 kernel ticks, 9 user ticks
hda2 (filesys): 340 reads, 663 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1595 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

run: wait for child 2 of 10 returned 0 (expected 1): FAILED

OUTPUT FROM tests/filesys/base/syn-read:

Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/_KHlzEHNND.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-read
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  382,976,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 228 sectors (114 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
(syn-read) exec child 2 of 10: "child-syn-read 1"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 3 of 10: "child-syn-read 2"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 4 of 10: "child-syn-read 3"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 5 of 10: "child-syn-read 4"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 6 of 10: "child-syn-read 5"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 7 of 10: "child-syn-read 6"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 8 of 10: "child-syn-read 7"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 9 of 10: "child-syn-read 8"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) exec child 10 of 10: "child-syn-read 9"
load: child-syn-read: open failed
child-syn-read: exit(0)
(syn-read) wait for child 1 of 10 returned 0 (expected 0)
(syn-read) wait for child 2 of 10 returned 0 (expected 1)
(syn-read) wait for child 2 of 10 returned 0 (expected 1): FAILED
syn-read: exit(1)
Execution of 'syn-read' complete.
Timer: 117 ticks
Thread: 37 idle ticks, 60 kernel ticks, 20 user ticks
hda2 (filesys): 157 reads, 470 writes
hda3 (scratch): 227 reads, 2 writes
Console: 2218 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

run: wait for child 2 of 10 returned 0 (expected 1): FAILED

OUTPUT FROM tests/filesys/base/syn-write:

Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/YEDpT3_WCC.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-write
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  387,072,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 227 sectors (113 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 6 of 10: "child-syn-wrt 5"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 7 of 10: "child-syn-wrt 6"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 8 of 10: "child-syn-wrt 7"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 9 of 10: "child-syn-wrt 8"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) exec child 10 of 10: "child-syn-wrt 9"
load: child-syn-wrt: open failed
child-syn-wrt: exit(0)
(syn-write) wait for child 1 of 10 returned 0 (expected 0)
(syn-write) wait for child 2 of 10 returned 0 (expected 1)
(syn-write) wait for child 2 of 10 returned 0 (expected 1): FAILED
syn-write: exit(1)
Execution of 'syn-write' complete.
Timer: 125 ticks
Thread: 41 idle ticks, 64 kernel ticks, 20 user ticks
hda2 (filesys): 152 reads, 474 writes
hda3 (scratch): 226 reads, 2 writes
Console: 2139 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-remove FAILURE:

run: 78 bytes read starting at offset 0 in "deleteme" differ from expected: FAILED

OUTPUT FROM tests/filesys/base/syn-remove:

Copying tests/filesys/base/syn-remove to scratch partition...
qemu-system-i386 -device isa-debug-exit -drive file=/tmp/uRoQo5UhXy.dsk,format=raw,index=0,media=disk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run syn-remove
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  366,592,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 174 sectors (87 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-remove' into the file system...
Erasing ustar archive...
Executing 'syn-remove':
(syn-remove) begin
(syn-remove) create "deleteme"
(syn-remove) open "deleteme"
(syn-remove) remove "deleteme"
(syn-remove) write "deleteme"
(syn-remove) seek "deleteme" to 0
(syn-remove) read "deleteme"
(syn-remove) 78 bytes read starting at offset 0 in "deleteme" differ from expected.
(syn-remove) Showing first differing 64 bytes.
(syn-remove) Data actually read:
00000000  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
00000010  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
00000020  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
00000030  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 |................|
(syn-remove) Expected data:
00000000  de 18 89 41 a3 37 5d 3a-8a 06 1e 67 57 6e 92 6d |...A.7]:...gWn.m|
00000010  c7 1a 7f a3 f0 cc eb 97-45 2b 4d 32 27 96 5f 9e |........E+M2'._.|
00000020  a8 cc 75 07 6d 9f b9 c5-41 7a a5 cb 30 fc 22 19 |..u.m...Az..0.".|
00000030  8b 34 98 2d bb 62 9e c0-4b 4f 8b 05 a0 71 08 50 |.4.-.b..KO...q.P|
(syn-remove) 78 bytes read starting at offset 0 in "deleteme" differ from expected: FAILED
syn-remove: exit(1)
Execution of 'syn-remove' complete.
Timer: 107 ticks
Thread: 35 idle ticks, 51 kernel ticks, 21 user ticks
hda2 (filesys): 94 reads, 235 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1961 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
